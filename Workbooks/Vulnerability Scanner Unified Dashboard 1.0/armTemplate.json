{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Vulnerability Scanner Unified Dashboard",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "azure security center",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2022-04-01",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# ASC Unified Built-in Vulnerability Scanner 1.0\\r\\nThis workbook is based on the following recommendations provided by Microsoft Defender for Cloud:\\r\\n* Machines should have vulnerability findings resolved\\r\\n* Azure registry container images should have vulnerabilities resolved\\r\\n* SQL servers on machines should have vulnerability findings resolved\"},\"customWidth\":\"50\",\"name\":\"Main headline\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"206f87e8-2616-4d26-a94f-a97eb4cee619\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"description\":\"Select Subscription\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"includeAll\":true,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"defaultValue\":\"value::all\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"parameter filters\"},{\"type\":1,\"content\":{\"json\":\"---\"},\"name\":\"text - 2\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"81073874-f7e3-4b99-9bb2-6fac88e2b726\",\"cellValue\":\"SelectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"OverviewTab\",\"style\":\"link\"},{\"id\":\"414bfeff-09a7-499e-95fc-c3adbf05dff5\",\"cellValue\":\"SelectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Servers\",\"subTarget\":\"ServersTab\",\"style\":\"link\"},{\"id\":\"d835a04d-17a7-4e50-b77a-9a8f0a8b3fba\",\"cellValue\":\"SelectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Containers\",\"subTarget\":\"ACRTab\",\"style\":\"link\"},{\"id\":\"17ef3796-ba42-410a-9c67-df97d763511a\",\"cellValue\":\"SelectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"SQL Servers\",\"subTarget\":\"SQLTab\",\"style\":\"link\"}]},\"name\":\"links - 13\"},{\"type\":1,\"content\":{\"json\":\"---\"},\"name\":\"text - 2 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n  | project ResourceType=tolower(split(id,\\\"/\\\").[6]), resourceName=tolower(split(id,\\\"/\\\").[8])\\r\\n  | summarize count=dcount(resourceName) by ResourceType\",\"size\":4,\"title\":\"Servers Count (Azure VMs + ARC Servers)\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ResourceType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"count\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"120px\"}},{\"columnMatch\":\"Rtype\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"ServerType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"ResourceType\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Resource\"}},\"leftContent\":{\"columnMatch\":\"count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true,\"sortCriteriaField\":\"ResourceType\",\"sortOrderField\":1,\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"ResourceType\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"count\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"count\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-VMCount\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Container images in Azure registry should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n  | project ResourceType=tolower(split(id,\\\"/\\\").[6]), resourceName=tolower(split(id,\\\"/\\\").[8])\\r\\n  | summarize count=dcount(resourceName) by ResourceType\",\"size\":4,\"title\":\"ACR Count\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ResourceType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"count\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-ContainerCount\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n  | project ResourceType=tolower(split(id,\\\"/\\\").[6]), resourceName=tolower(split(id,\\\"/\\\").[8])\\r\\n  | summarize count=dcount(resourceName) by ResourceType\",\"size\":4,\"title\":\"SQL Count (Azure + ARC Servers)\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ResourceType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"count\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-SQLCount\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n  // Get data in useful table format\\r\\n  | project subassessmentKey=name, parse_json(properties) \\r\\n  | extend VulnId = tostring(properties.id), description = tostring(properties.displayName), severity = tostring(properties.status.severity)\\r\\n// Filter & summarize \\r\\n| summarize dcount(VulnId) by severity\",\"size\":1,\"title\":\"Servers | Severity\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Low\",\"color\":\"blueDark\"}]}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-ServersPie\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Container images in Azure registry should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n  // Get data in useful table format\\r\\n  | project subassessmentKey=name, parse_json(properties) \\r\\n  | extend VulnId = tostring(properties.id), description = tostring(properties.displayName), severity = tostring(properties.status.severity), status = tostring(properties.status.code)\\r\\n  | where status != 'Healthy'\\r\\n// Filter & summarize \\r\\n  | summarize dcount(VulnId) by severity\",\"size\":1,\"title\":\"ACR Images | Serverity Count\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Unknown\",\"color\":\"blueDark\"}]}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-ContainersPie\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n  // Get data in useful table format\\r\\n  | project subassessmentKey=name, parse_json(properties) \\r\\n  | extend VulnId = tostring(properties.id), description = tostring(properties.displayName), severity = tostring(properties.status.severity), status = tostring(properties.status.code)\\r\\n  // Filter & summarize \\r\\n  | where status != 'Healthy'\\r\\n  | summarize dcount(VulnId) by severity\",\"size\":1,\"title\":\"SQL | Severity Count\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"visualization\":\"piechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Column1\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"IncidentCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Low\",\"color\":\"blueDark\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview-SQLPie\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | summarize dcount(VulnId) by Resource, severity, VulnId, description\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"Servers (Azure + ARC) Impacted\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":5,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"red\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview - ServerTable\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Azure registry container images should have vulnerabilities resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | summarize dcount(VulnId) by Resource, severity, VulnId, description\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"ACR Impacted\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":5,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"red\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview - ACRTable\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n// Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | summarize dcount(VulnId) by Resource, severity, VulnId, description\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"SQL (Azure + ARC) Impacted\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":5,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"red\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_sevH_2\",\"sortOrder\":2}]},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"OverviewTab\"},\"name\":\"Overview - SQLTable\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' and ResourceType == 'microsoft.compute'\\r\\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"Servers (Azure) Overview\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":14,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"ResourceGroup\",\"formatter\":5},{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"ResourceGroup\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ServersTab\"},\"name\":\"Servers - AzureTable\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' and ResourceType == 'microsoft.hybridcompute'\\r\\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"Servers (ARC) Overview\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":14,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"ResourceGroup\",\"formatter\":5},{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"ResourceGroup\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ServersTab\"},\"name\":\"Servers - ARCTable \",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Servers (Azure + ARC) Recommendations list\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, category = tostring(properties.category), timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, threat = tostring(properties.additionalData.threat)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | project severity, VulnId, description, tostring(patchable), category, Resource, ResourceGroup, tostring(cve), timeGenerated, remediation, impact, threat\",\"size\":2,\"title\":\"The search box can be used to filter recommendations (Resource, ResourceGroup, CVE, VulnID, Severity, Keywords, etc)\",\"showExportToExcel\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"blueDark\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"severity\",\"formatter\":5}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"severity\"],\"expandTopLevel\":true,\"finalBy\":\"severity\"},\"sortBy\":[{\"itemKey\":\"$gen_thresholds_$gen_group_0\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"$gen_thresholds_$gen_group_0\",\"sortOrder\":1}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ServersTab\"},\"name\":\"Servers - FullListTable\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ServersTab\"},\"name\":\"group - 17\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Azure registry container images should have vulnerabilities resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' and ResourceType == 'microsoft.containerregistry'\\r\\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"Azure Container Registries\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":14,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"ResourceGroup\",\"formatter\":5},{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"ResourceGroup\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ACRTab\"},\"name\":\"Containers - ACR Repos Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Azure registry container images should have vulnerabilities resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, Repo = tostring(parse_json(properties.additionalData).repositoryName), imageDigest = tostring(parse_json(properties.additionalData).imageDigest)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' and ResourceType == 'microsoft.containerregistry'\\r\\n | summarize dcount(VulnId) by Resource, severity, VulnId, description, tostring(patchable), tostring(cve), Repo, imageDigest\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by Resource, Repo, imageDigest\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"Vulnerable Images Scanned\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"Resource\",\"formatter\":5,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"imageDigest\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"18ch\"}},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"ResourceGroup\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Resource\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ACRTab\"},\"name\":\"Containers - ACRImages Table\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"ACR Vulnerabilities recommendations list\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"Azure registry container images should have vulnerabilities resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, category = tostring(properties.category), timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, Repo = tostring(parse_json(properties.additionalData).repositoryName), imageDigest = tostring(parse_json(properties.additionalData).imageDigest)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' and ResourceType == 'microsoft.containerregistry'\\r\\n | project severity, VulnId, description, tostring(patchable), category, Resource, Repo, imageDigest, ResourceGroup, tostring(cve), timeGenerated, remediation, impact\",\"size\":2,\"title\":\"The search box can be used to filter recommendations (Resource, ResourceGroup, CVE, VulnID, Severity, Keywords, etc)\",\"showExportToExcel\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"blueDark\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"severity\",\"formatter\":5}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"severity\"],\"expandTopLevel\":true,\"finalBy\":\"severity\"},\"sortBy\":[{\"itemKey\":\"patchable\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"patchable\",\"sortOrder\":2}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ACRTab\"},\"name\":\"Containers - FullListTable\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"ACRTab\"},\"name\":\"Containers - ACR Vulnerabilities Table\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName)\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy' \\r\\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by ResourceGroup, Resource\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"SQL Servers (Azure + ARC) Overview\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":14,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"ResourceGroup\",\"formatter\":5},{\"columnMatch\":\"Resource\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"ResourceGroup\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"SQLTab\"},\"name\":\"SQL - AzureTable\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), DB = parse_json(properties.resourceDetails).id, benchmark = parse_json(properties.additionalData).benchmarks, properties\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | summarize dcount(VulnId) by Resource, severity, VulnId, description, tostring(DB), tostring(benchmark)\\r\\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low') by Resource, DB\\r\\n | order by sevH desc\",\"size\":0,\"title\":\"SQL Servers DBs with vulnerabilities\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true,\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"Resource\",\"formatter\":5,\"formatOptions\":{\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"id\",\"formatter\":1},{\"columnMatch\":\"Total\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevH\",\"formatter\":4,\"formatOptions\":{\"palette\":\"red\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevM\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"sevL\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blueDark\",\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"patchAvailable\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"pending\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]},\"customColumnWidthSetting\":\"10ch\"}},{\"columnMatch\":\"CVEcount\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"4\",\"text\":\"{0}{1}\"}],\"customColumnWidthSetting\":\"10ch\"}}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Resource\"],\"expandTopLevel\":true}},\"sortBy\":[]},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"SQLTab\"},\"name\":\"SQL- ARCTable \",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"SQL Vulnerabilities recommendations list\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"securityresources\\r\\n | where type == \\\"microsoft.security/assessments\\\"\\r\\n | where * contains \\\"SQL servers on machines should have vulnerability findings resolved\\\"\\r\\n | summarize by assessmentKey=name //the ID of the assessment\\r\\n // Joining Assessment + SubAssessment table to get more details\\r\\n | join kind=inner ( \\r\\n securityresources \\r\\n \\t| where type == \\\"microsoft.security/assessments/subassessments\\\"\\r\\n\\t| extend assessmentKey = extract(\\\".*assessments/(.+?)/.*\\\",1,  id)\\r\\n ) on assessmentKey\\r\\n // Get data in useful table format\\r\\n | project Resource = extract(\\\"([\\\\\\\\s\\\\\\\\S]*?)(/providers/Microsoft.Security.*)\\\",1,id), ResourceGroup = trim_end(\\\"/\\\",extract(\\\".*resourceGroups/(.+?)/\\\",0,id)), ResourceType = tolower(split(id,\\\"/\\\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), category = tostring(properties.category), timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, DB = parse_json(properties.resourceDetails).id, benchmark = parse_json(properties.additionalData).benchmarks, properties\\r\\n // Filter and summarize\\r\\n | where status != 'Healthy'\\r\\n | project severity, VulnId, description, category, Resource, DB, ResourceGroup, timeGenerated, benchmark, remediation, impact\",\"size\":2,\"title\":\"The search box can be used to filter recommendations (Resource, ResourceGroup, CVE, VulnID, Severity, Keywords, etc)\",\"showExportToExcel\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"$gen_group\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"blueDark\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"severity\",\"formatter\":5},{\"columnMatch\":\"DB\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true}}],\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"severity\"],\"expandTopLevel\":true,\"finalBy\":\"severity\"},\"sortBy\":[{\"itemKey\":\"$gen_thresholds_$gen_group_0\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"$gen_thresholds_$gen_group_0\",\"sortOrder\":1}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"SQLTab\"},\"name\":\"SQL- FullListTable\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"SelectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"SQLTab\"},\"name\":\"SQL- Vulnerabilities Table\"}],\"isLocked\":false,\"fallbackResourceIds\":[\"azure security center\"]}",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}
